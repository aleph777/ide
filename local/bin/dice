#!/usr/bin/perl -w    # -*-Perl-*-

#         Copyright Â© 2021-2023 Tom Fontaine

# Title:  dice
# Date:   12-Feb-2021

# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software",
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# Except as contained in this notice, the name(s of the above copyright
# holders shall not be used in advertising or otherwise to promote the sale,
# use or other dealings in this Software without prior written authorization.

# The software is provided "As Is", without warranty of any kind, express or
# implied, including but not limited to the warranties of merchantability,
# fitness for a particular purpose and noninfringement. In no event shall
# the authors or copyright holders be liable for any claim, damages or other
# liability, whether in an action of contract, tort or otherwise, arising
# from, out of or in connection with the software or the use or other
# dealings in the software.

#
# Purpose:
#
# Arguments:
#
# Revision:
#
use List::Util qw(sum min max);
use Math::Dice;
use strict;
use v5.10;

use constant _ME_ => $0 =~ m=([^/]+)$=;

my ($n,$sides) = @ARGV;

$n     = 2 unless defined $n;
$sides = 6 unless defined $sides;

my @d = (1 .. $sides);

# my @dist = @d;

# for (1 .. $n-1)
# {
#   for my $i (1 .. $sides)
#   {
#     my $d = shift @dist;

#     push @dist,map { join ',',$d,$_ } @d;
#   }
# }
# my @distribution = map { sum(split ',') } @dist;

# say $_ for sort { $a <=> $b } @distribution;
my $md = Math::Dice->new();

$md->getDistribution(N => $n, dice => \@d);

my @range = min(@{$md->{contents}}) .. max (@{$md->{contents}});

my %hist = map { $_ => 0 } @range;

$hist{$_}++ for @{$md->{contents}};

my $s = @{$md->{contents}};

say sprintf '%2d: %5.2f',$_,100*$hist{$_}/$s for @range;
