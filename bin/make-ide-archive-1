#!/usr/bin/perl -w    # -*-Perl-*-

#              Copyright Â© 2008-2017 Tom Fontaine

# Title:       make-ide-archive-1
# Author:      Tom Fontaine
# Date:        15-May-2008
# Time-stamp: <19-Sep-2017 12:53:36 EDT, modified by Tom Fontaine>
#

# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software",
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# Except as contained in this notice, the name(s of the above copyright
# holders shall not be used in advertising or otherwise to promote the sale,
# use or other dealings in this Software without prior written authorization.

# The software is provided "As Is", without warranty of any kind, express or
# implied, including but not limited to the warranties of merchantability,
# fitness for a particular purpose and noninfringement. In no event shall
# the authors or copyright holders be liable for any claim, damages or other
# liability, whether in an action of contract, tort or otherwise, arising
# from, out of or in connection with the software or the use or other
# dealings in the software.

#
# Purpose:   Creates an xz-compressed tar archive of the ide
#
# Arguments: None
#
# Revision:  25-Mar-2015 "use strict"
#            03-Apr-2015 Major overhaul
#            01-Jun-2015 "use DateTime"
#            01-Mar-2016 Changed elisp package handling to filter git data and obsolete dirs
#            19-Sep-2017 Added .stardict to DIRS
#
use DateTime;
use Archive::Tar;
use File::FindWrapper;
use IO::Compress::Gzip;
use IO::Compress::Xz;

use File::Path qw(make_path);

use strict;
use v5.10;

use constant _ME_ => $0 =~ m=([^/]+)$=;

use constant FILES => qw(.bashrc .emacs .emacs.d/gtkrc .gitconfig);
use constant DIRS  => qw(bin lib local elisp .stardict);

if(@ARGV && $ARGV[0] eq '-help')
{
  print "\nUsage: ",_ME_," [-gz]\n\n";
  exit;
}
chdir $ENV{HOME};

my $dir = "Documents/ide";

die _ME_,": $dir does not exist!!!\n"     unless -e $dir;
die _ME_,": $dir is not a directory!!!\n" unless -d $dir;

make_path($dir) unless -d $dir;

my $fh;

my $fn = join '.',"$dir/ide",DateTime->now(time_zone => 'local')->strftime('%Y%m%d_%H%M%S');

if(@ARGV && $ARGV[0] eq '-gz')
{
  $fn .= '.tar.gz';
  $fh  = IO::Compress::Gzip->new($fn);
}
else
{
  $fn .= '.tar.xz';
  $fh  = IO::Compress::Xz->new($fn);
}
my $find = File::FindWrapper->new;
my $tar  = Archive::Tar->new;

$find->get(root => [DIRS],option => {'no-dir' => 1,'no-name' => '(git|obsolete)'});

say $_ for FILES;
$tar->add_files(FILES);

say $_ for(@{$find->contents});
$tar->add_files(@{$find->contents});

$tar->write($fh);
$fh->close();
