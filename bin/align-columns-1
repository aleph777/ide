#!/usr/bin/perl -w    # -*-Perl-*-

#         Copyright Â© 2016-2021 Tom Fontaine

# Title:  align-columns-1
# Author: Tom Fontaine
# Date:   05-Jan-2016

# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software",
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# Except as contained in this notice, the name(s of the above copyright
# holders shall not be used in advertising or otherwise to promote the sale,
# use or other dealings in this Software without prior written authorization.

# The software is provided "As Is", without warranty of any kind, express or
# implied, including but not limited to the warranties of merchantability,
# fitness for a particular purpose and noninfringement. In no event shall
# the authors or copyright holders be liable for any claim, damages or other
# liability, whether in an action of contract, tort or otherwise, arising
# from, out of or in connection with the software or the use or other
# dealings in the software.

# Purpose:   Used as an emacs call-process-region by u-align-columns
#
# Arguments: None
#
# Revision:
#
use List::Util qw(max);
use strict;

my @text = <>;

chomp @text;

my $indentation = ' ' x length(($text[0] =~ /^(\s*)/)[0]);

s/^\s+// for @text;

my @columns = map { [split /\s+/,$_] } @text;

my @len;

for(@columns)
{
  my $col = 0;

  foreach my $word (@{$_})
  {
    $len[$col++] = defined $len[$col] ? max(length($word), $len[$col]) : length($word);
  }
}
for(@columns)
{
  if(@{$_})
  {
    my $fmt = join ' ',map { join '','%-',$_,'s' } @len[0 .. $#{$_}-1];

    if($fmt )
    {
      printf "$indentation$fmt %-s\n",@{$_};
    }
    else
    {
      printf "%-s\n",$_->[0];
    }
  }
  else
  {
    print "\n";
  }
}
