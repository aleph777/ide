#!/usr/bin/env -S perl   # -*-Perl-*-

#         Copyright Â© 1998-2023 Tom Fontaine

# Title:  middle
# Author: Tom Fontaine
# Date:   07-May-1998

# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software",
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# Except as contained in this notice, the name(s of the above copyright
# holders shall not be used in advertising or otherwise to promote the sale,
# use or other dealings in this Software without prior written authorization.

# The software is provided "As Is", without warranty of any kind, express or
# implied, including but not limited to the warranties of merchantability,
# fitness for a particular purpose and noninfringement. In no event shall
# the authors or copyright holders be liable for any claim, damages or other
# liability, whether in an action of contract, tort or otherwise, arising
# from, out of or in connection with the software or the use or other
# dealings in the software.

# Purpose:   This script prints the 'middle' of a file or files (or STDIN) as
#            defined by $1 and $2.  If $2 is not specified, then the files
#            is printed from $1 to the end.  If $1 is greater than $2, then
#            $1 is used as the ending line number, and $2 is used as the
#            beginning line number.
#
# Arguments: $1 is the beginning line number (preceded by a '-', default == 1)
#            $2 is the ending line number    (preceded by a '-', default == EOF)
#
# Revision:  09-Oct-2001 Fixed bug in multiple file detection
#            12-May-2008 use strict
#            12-Jun-2023 new shebang
#                        use Modern::Perl
#
use Modern::Perl;

use constant _ME_ => $0 =~ m=([^/]+)$=;

my @parm;
my %line;

push @parm,substr(shift @ARGV,1) while @ARGV && substr($ARGV[0],0,1) eq '-';

my ($beg,$end) = @parm;

$beg = ((defined $beg) && $beg) ? $beg : 1;

($beg,$end) = ($end,$beg) if defined $end && $beg > $end;

if(@ARGV && (@ARGV > 1 || scalar(map { glob $_ } @ARGV) > 1))
{
  while(<>)
  {
    print "$ARGV: $_" if (++$line{$ARGV} >= $beg) && (!defined $end || ($line{$ARGV} <= $end));
  }
}
else
{
  while(<>)
  {
    print "$_" if ($. >= $beg) && (!defined $end || ($. <= $end));
  }
}
