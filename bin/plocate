#!/usr/bin/perl -w    # -*-Perl-*-

#              Copyright © 2017-2017 Tom Fontaine

# Title:       plocate
# Author:      Tom Fontaine
# Date:        16-Jan-2017
# Time-stamp: <18-Jan-2017 15:24:42 EST, modified by Tom Fontaine>
#

# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software",
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# Except as contained in this notice, the name(s of the above copyright
# holders shall not be used in advertising or otherwise to promote the sale,
# use or other dealings in this Software without prior written authorization.

# The software is provided "As Is", without warranty of any kind, express or
# implied, including but not limited to the warranties of merchantability,
# fitness for a particular purpose and noninfringement. In no event shall
# the authors or copyright holders be liable for any claim, damages or other
# liability, whether in an action of contract, tort or otherwise, arising
# from, out of or in connection with the software or the use or other
# dealings in the software.

#
# Purpose:   Perl wrapper for ‘locate’
#
# Arguments: [switch [arg] ...] dir1 [dir2 ... dirN]
#
# Revision:
#
use File::FindWrapper;
use Util::Options;

use Cwd qw(abs_path);

use strict;
use v5.10;

my $f = File::FindWrapper->new();
my $o = Util::Options->new();

my %option;

$o->get(ARGS => \@ARGV,Options => \%option,Switches => [@{$f->switches},'help'],ArgSwitches => [@{$f->argSwitches},'exec\b']);

if(exists $option{'help'})
{
  print "\nUsage:  ",($0 =~ m=([^/]+)$=)," [switch [arg] ...] dir1 [dir2 ... dirN]\n\n";
  print "Switches:\n";

  printf "%24s - display usage\n\n",'-help';
  printf "%24s - find union of switch outcomes (default is intersection)\n\n",'-OR';
  printf "%24s - execute shell command on found files\n\n",'-exec';
  printf "%17s regexp,\n%17s regexp - find files with (not) names matching perl regular expression\n",'-name','-no-name';
  printf "%17s regexp,\n%17s regexp - find files with (not) basenames matching perl regular expression\n",'-basename','-no-basename';
  printf "%17s regexp,\n%17s regexp - find files with (not) suffixes matching perl regular expression\n",'-suffix','no-suffix';
  printf "%17s regexp,\n%17s regexp - find files with (not) dirnames matching perl regular expression\n\n",'-dirname','-no-dirname';
  printf "%24s,\n%24s - find files (not) readable by effective uid\n",'-read-effective','-no-read-effective';
  printf "%24s,\n%24s - find files (not) writable by effective uid\n",'-write-effective','-no-write-effective';
  printf "%24s,\n%24s - find files (not) executable by effective uid\n",'-execute-effective','-no-execute-effective';
  printf "%24s,\n%24s - find files (not) owned by effective uid\n\n",'-owned-effective','-no-owned-effective';
  printf "%24s,\n%24s - find files (not) readable by real uid\n",'-read-real','-no-read-real';
  printf "%24s,\n%24s - find files (not) writable by real uid\n",'-write-real','-no-write-real';
  printf "%24s,\n%24s - find files (not) executable by real uid\n",'-execute-real','-no-execute-real';
  printf "%24s,\n%24s - find files (not) owned by real uid\n\n",'-owned-real','-no-owned-real';
  printf "%24s,\n%24s - find files (not) of size zero\n\n",'-zero-size','-no-zero-size';
  printf "%17s nbytes - find files of size greater than nbytes\n",'-size-gt';
  printf "%17s nbytes - find files of size greater than or equal nbytes\n",'-size-ge';
  printf "%17s nbytes - find files of size less than nbytes\n",'-size-lt';
  printf "%17s nbytes - find files of size less than or equal nbytes\n\n",'-size-le';
  printf "%24s,\n%24s - find (not) plain files\n",'-file','-no-file';
  printf "%24s,\n%24s - find (not) directory files\n",'-dir','-no-dir';
  printf "%24s,\n%24s - find (not) symbolic links\n",'-link','-no-link';
  printf "%24s,\n%24s - find (not) pipes\n",'-pipe','-no-pipe';
  printf "%24s,\n%24s - find (not) sockets\n",'-socket','-no-socket';
  printf "%24s,\n%24s - find (not) block special file\n",'-block','-no-block';
  printf "%24s,\n%24s - find (not) character special file\n",'-char','-no-char';
  printf "%24s,\n%24s - find files with (not) setuid bit set\n",'-setuid','-no-setuid';
  printf "%24s,\n%24s - find files with (not) setgid bit set\n",'-setgid','-no-setgid';
  printf "%24s,\n%24s - find files with (not) sticky bit set\n\n",'-sticky','-no-sticky';
  printf "%24s,\n%24s - find (not) text files\n",'-text','-no-text';
  printf "%24s,\n%24s - find (not) binary files\n\n",'-bin','-no-bin';
  printf "%17s days - find files of age greater than days\n",'-age-gt';
  printf "%17s days - find files of age greater than or equal days\n",'-age-ge';
  printf "%17s days - find files of age less than days\n",'-age-lt';
  printf "%17s days - find files of age less than or equal days\n\n",'-age-le';
  printf "%17s days - find files of access time greater than days\n",'-access-gt';
  printf "%17s days - find files of access time greater than or equal days\n",'-access-ge';
  printf "%17s days - find files of access time less than days\n",'-access-lt';
  printf "%17s days - find files of access time less than or equal days\n\n",'-access-le';
  printf "%17s days - find files of inode change time greater than days\n",'-inode-gt';
  printf "%17s days - find files of inode change time greater than or equal days\n",'-inode-ge';
  printf "%17s days - find files of inode change time less than days\n",'-inode-lt';
  printf "%17s days - find files of inode change time less than or equal days\n\n",'-inode-le';

  exit;
}
my $re;

if(@ARGV == 1)
{
  $re = '^'.abs_path($ARGV[0]);
}
elsif(@ARGV > 1)
{
  $re = join '',"'^(",join('|',map { abs_path($_) } @ARGV),")'";
}
else
{
  $re = '.';
}
my @contents = qx(locate -e --regex $re);

chomp @contents;

$f->useFind(0);
$f->get(option => \%option, contents => \@contents);

die "No files match criteria!!!\n" unless @contents;

print map { $_,"\n" } @contents;
