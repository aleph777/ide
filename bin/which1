#!/usr/bin/perl -w    # -*-Perl-*-

#         Copyright Â© 2006-2022 Tom Fontaine

# Title:  which
# Author: Thomas J Fontaine
# Date:   21-Jun-2006

# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software",
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# Except as contained in this notice, the name(s of the above copyright
# holders shall not be used in advertising or otherwise to promote the sale,
# use or other dealings in this Software without prior written authorization.

# The software is provided "As Is", without warranty of any kind, express or
# implied, including but not limited to the warranties of merchantability,
# fitness for a particular purpose and noninfringement. In no event shall
# the authors or copyright holders be liable for any claim, damages or other
# liability, whether in an action of contract, tort or otherwise, arising
# from, out of or in connection with the software or the use or other
# dealings in the software.

# Purpose:   Alternative to 'which' for use when native version behavoir is off
#
# Arguments: $1 is executable name
#
# Revision:  11-May-2008 use strict
#            13-Feb-2010 'no @_ in PATH' message to STDERR
#            30-Mar-2015 Now using File::Which
#
#use File::Which qw(which);
use strict;
use v5.10;

die join '',($0 =~ m=([^/]+)$=),": No file specified!!!\n" unless defined $ARGV[0];

# if(my $w = which($ARGV[0]))
# {
#   print $w,"\n";
# }
my ($file,$found);

my @path = split ':',$ENV{PATH};

for(@ARGV)
{
  $found = 0;

  foreach my $dir (@path)
  {
    next unless -e $dir && -d $dir && -r $dir;

    $file = "$dir/$_";
    say 'file => ',$file;

    if(-x $file && -r $file)
    {
      $found = 1;

      say $file;

      last;
    }
  }
  print STDERR "No $_ in @path\n" unless $found;
}
